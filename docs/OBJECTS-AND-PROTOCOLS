-- The Classes Up For Adoption --

Those marked with a ? require discussion and are not
automatically in.

Consider each method during implementation, as a verbatum implementation
may not work for Redline. For example Java has unicode, so this should be
supported directly - see Class Character. It is also worth while looking
at the Bistro sources to see how Java effected that implementation.

Each method should contain a method comment that describes what it does,
in the format given in the Blue Book / Pharo.

Where a Class has no associated protocol listed this is probably because
the protocol is covered in a superclass or not covered by the Blue Book.
When you adopt a Class please double check the Blue Book and Pharo.

NOTE: The implementation of the methods needs to respect that it is ontop
of Java, therefore some things that deal with bytes or characters need to
realise they are Java byte and character sizes.

If you find yourself needing a new primitive or are unsure about primitives
then contact James Ladd.

PLEASE double check the class you adopt and the Blue Book to make sure
all the methods have been covered. Note: during cut-n-paste some L's 
became I's and I tried to find and fix them all.

-- Hierarchy --

Object
 Magnitude
  Character
  Date
  Time
 Number 
  Float 
  Fraction 
  Integer 
   LargeNegativeInteger 
   LargePositiveInteger 
   SmallInteger 
 LookupKey
  Association

Exception 
  Abort
  Error 
    ArithmeticError
      DomainError
      FloatingPointException
      NaNException
    BlockCannotReturn
    DuplicatedVariableError
    NonBooleanReceiver
    OutOfMemory
    SelectorException 
      PrimitiveFailed
      ShouldBeImplemented
      ShouldNotImplement
      SubclassResponsibility 
    SubcriptOutOfBounds
  Halt
    AssertionFailure
  IllegalResumeAttempt
  Notification
    Warning
      Deprecation
  UnhandledError
ExceptionSet

?Link
 ?Process

Collection
 SequenceableCollection 
  LinkedList 
   ?Semaphore
  ArrayedCollection 
   Array 
   ?RunArray
   String
    Symbol
   Text
   ByteArray
 Bag
 MappedCollection
 Set 
  Dictionary
  IdentityDictionary

 Stream
  PositionableStream
   ReadStream
   WriteStream
    ReadWriteStream
     ExternalStream
      FileStream
 Random
 
 File 
  FileDirectory
  ?FilePage
 
 UndefinedObject
 Boolean 
  True 
  False 

 ?ProcessScheduler
 ?Delay
 ?SharedQueue 

 Behavior
  ClassDescription
  Class
  MetaClass


-- Protocols --
 
** NOTE: I have not split Instance and Class Protocol.
** You need to check class/instance when implementing the method.

-- Object protocol --

class
isKindOf: aClass
isMemberOf: aClass
respondsTo: aSymbol
== anObject
= anObject
~= anObject
~ anObject
hash
isNil
notNil
copy
shallowCopy
deepCopy
at: index
at: index put: anObject
basicAt: index 
basicAt: index put: anObject
size
basicSize
printString
printOn: aStream
storeString
storeOn: aStream
doesNotUnderstand: aMessage
error: aString
primitiveFailed 
shouldNotImplement
subclassResponsibility
addDependent: anObject
removeDependent: anObject 
dependents 
release
changed
changed: aParameter
update: aParameter 
broadcast: aSymbol 
broadcast: aSymboi with: anObject
perform: aSymbol
perform: aSymbol with: anObject
perform: aSymbol with: firstObject with: secondObject
perform: aSymbol with: firstObject with: secondObject with: thirdObject
perform: selector withArguments: anArray
become: otherObject
instVarAt: index
instVarAt: index put: value
nextlnstance
numberOfPointers
refct


-- Magnitude protocol --

< aMagnitude
< aMagnitude
< = aMagnitude
> aMagnitude
> = aMagnitude
between: min and: max
min: aMagnitude
max: aMagnitude

-- Date protocol --

dayOfWeek: dayName
nameOfDay: daylndex
indexOfMonth: monthName
nameOfMonth: monthlndex
dayslnMonth: monthName forYear: yearlnteger
dayslnYear: yearlnteger
leapYear: yearlnteger
dateAndTimeNow
today
fromDays: dayCount
newDay: day month: monthName year: yearlnteger
newDay: dayCount year: yearlnteger
addDays: dayCount
subtractDays: dayCount
subtractDate: aDate
asSeconds

-- Time protocol --
millisecondClockValue
millisecondsToRun: timedBlock
timeWords
totalSeconds
dateAndTimeNow 
now
fromSeconds: secondCount
addTime: timeAmount
subtractTime: timeAmount
asSeconds

-- Character Protocol -- 

value: anlnteger
digitValue: anlnteger
asciiValue
digitValue
isAIphaNumeric
isDigit
isLetter
isLowercase
isUppercase
isSeparator
isVowel

-- Number Protocol -- 
+ aNumber
- aNumber
. aNumber
/ aNumber
// aNumber
\\ aNumber
abs
negated
quo: aNumber
rem: aNumber
reciprocal
exp
In
log: aNumber
floorLog: radix
raisedTo: aNumber
raisedTolnteger: anlnteger
sqrt
squared 
even
odd
negative
positive
strictlyPositive
sign
ceiling
floor
truncated
truncateTo: aNumber
rounded
roundTo: aNumber
degreesToRadians
radiansToDegrees
coerce: aNumber
generality
retry: aSymbol coercing: aNumber
to: stop
to: stop by: step
to: stop do: aBIock
to: stop by: step do: aBIock

-- Integer Protocol --
factorial
gcd: anlnteger
lcm: anlnteger
allMask: anlnteger
anyMask: anlnteger
noMask: anlnteger
bitAnd: anlnteger
bitOr: anlnteger
bitXor: anlnteger
bitAt: index
bitlnvert
highBit
bitShift: anlnteger

-- Random Protocol --
next

-- Collection Protocol -- 
add: newObject
addAll: aCollection
remove: oldObject
remove: oldObject ifAbsent: anExceptionBIock
removeAll: aCollection
includes: anObject 
isEmpty 
occurrencesOf: anObject 
do: aBlock
select: aBlock
reject: aBlock
collect: aBlock
detect: aBlock
detect: aBIock ifNone: exceptionBIock
inject: thisValue into: binaryBlock
with: anObject
with: firstObject with: secondObject
with: firstObject with: secondObject with: thirdObject
with: firstObject with: secondObject with: thirdObject with: fourthObject
asBag
asSet 
asOrderedCollection 
asSortedCol lection
asSortedCollection: aBIock

-- Bag Protocol --
add: newObject withOccurrences: anInteger

-- Set Protocol --

-- Dictionary Protocol --
at: key ifAbsent: aBlock
associationAt: key
associationAt: key ifAbsent: aBIock
keyAtValue: value
keyAtValue: value ifAbsent: exceptionBIock
keys
values
includesAssociation: anAssociation
includesKey: key
removeAssociation: anAssociation
removeKey: key
removeKey: key ifAbsent: aBlock
associationsDo: aBlock
keysDo: aBlock

-- SequencableCollection Protocol --

atAll: aCollection put: anObject
atAllPut: anObject
first
last
indexOf: anElement
indexOf: anElement ifAbsent: exceptionBlock
indexOfSubCollection: aSubCollection startingAt: anlndex
indexOfSubCollection: aSubCollection startingAt: anlndex ifAbsent: exceptionBlock
replaceFrom: start to: stop with: replacementCollection
replaceFrom: start to: stop with: replacementCollection startingAt: repStart
, aSequenceableCollection
copyFrom: start to: stop
copyReplaceAll: oldSubCollection with: newSubCollection
copyReplaceFrom: start to: stop with: replacementCollection
copyWith: newElement
copyWithout: oldElement
findFirst: aBlock
findLast: aBlock
reverseDo: aBlock
with: aSequenceableCollection do: aBlock

-- OrderedCollection Protocol --

after: oldObject
before: oldObject
add: newObject after: oldObject
add: newObject before: oldObject
addAddFirst: anOrderedCollection
addAllLast: anOrderedCollection
addFirst: newObject
addLast: newObject
removeFirst
removeLast

-- SortedCollection Protocol --

sortBlock: aBlock
sortBlock
sortBlock: aBlock

-- LinkedList Protocol --

nextLink: aLink
nextLink
nextLink: aLink
addFirst: aLink
addLast: aLink
removeFirst
removeLast

-- Interval Protocol --

from: startInteger to: stopInteger
from: startInteger to: stopInteger by: stepInteger

-- ArrayedCollection Protocol --

-- String Protocol --

< aString
<= aString
> aString
>= aString 
match: aString
sameAs: aString
asLowercase 
asUppercase 
asSymbol

-- Symbol Protocol --

intern: aString
internCharacter: aCharacter

-- MappedCollection Protocol --

-- Stream Protocol --

next
next: anInteger
nextMatchFor: anObject
contents
nextPut: anObject
nextPutAll: aCollection
next: aninteger put: anObject
atEnd
do: aBlock

-- PositionableStream Protocol --
on: aCollection
on: aCollection from: firstindex to: lastlndex
isEmpty
peek
peekFor: anObject 
upTo: anObject 
reverseContents 
position
position: anInteger
reset 
setToEnd 
skip: anInteger
skipTo: anObject

-- ReadStream Protocol --
-- WriteStream Protocol --
-- ReadWriteStream Protocol --

-- ExternalStream Protocol --

nextNumber: n
nextNumber: n put: v 
nextString 
nextStringPut: aString 
nextWord 
nextWordPut: anInteger 
padTo: bsize
padTo: bsize put: aCharacter 
padToNextWord 
padToNextWordPut: aCharacter 
skipWords: nWords 
wordPosition 
wordPosition: wp 

-- UndefinedObject Protocol --
isNil
notNil

-- Boolean Protocol --
& aBoolean
| aBoolean
not
eqv: aBoolean
xor: aBoolean
and: alternativeBlock
or: alternativeBlock
ifTrue: trueAIternativeBlock ifFalse: falseAlternativeBlock
ifFalse: falseAIternativeBlock ifTrue: trueAlternativeBlock
ifTrue: trueAlternativeBlock
ifFalse: falseAlternativeBlock

-- Behavior Protocol --
methodDictionary: aDictionary
addSelector: selector withMethod: compiledMethod
removeSelector: selector
compile: code
compile: code notifying: requestor
recompile: selector
decompile: selector
compileAll
compileAllSubclasses
new
basicNew
new: anInteger
basicNew: anInteger
superclass: aClass
addSubclass: aClass
removeSubclass: aClass
selectors
allSelectors
compiledMethodAt: selector 
sourceCodeAt: selector 
sourceMethodAt: selector 
alllnstances
someinstance
instanceCount
instVarNames
subclassInstVarNames
allInstVarNames 
classVarNames 
allClassVarNames 
sharedPools 
allSharedPools 
subclasses
allSubclasses
withAllSubclasses
superclass
allSuperclasses
hasMethods
includesSelector: selector
canUnderstand: selector
whichClasslncludesSelector: selector
whichSelectorsAccess: instVarName
whichSelectorsReferTo: anObject
scopeHas: name ifTrue: aBlock
isPointers
isBits
isBytes
isWords
isFixed
isVariable
instSize
allSubclassesDo: aBlock
allSuperclassesDo: aBlock
alllnstancesDo: aBlock
allSubinstancesDo: aBlock
selectSubclasses: aBIock
selectSuperclasses: aBIock
classVariableString
instanceVariableString
sharedVariableString

-- ClassDescription Protocol --

name
comment
comment: aString
addlnstVarName: aString
removelnstVarName: aString
category
category: aString
removeCategory: aString
whichCategorylncludesSelector: selector
fileOutOn: aFileStream
fileOutCategory: categoryName
fileOutChangedMessages: setOfChanges on: aFileStream

-- Metaclass Protocol --

subclassOf: superMeta
name: newName
    environment: aSystemDictionary
    subclassOf: superClass
    instanceVariableNames: stringOflnstVarNames
    variable: variableBoolean
    words: wordBoolean
    pointers: pointerBoolean
    classVariableNames: stringOfCiassVarNames
    poolDictionaries: stringOfPoolNames
    category: categoryName
    comment: commentString
    changed: changed

-- Class Protocol --

addClassVarName: aString
removeClassVarName: aString
addSharedPool: aDictionary
removeSharedPooi: aDictionary
classPool
initialize
subclass: classNameString
  instanceVariableNames: stringlnstVarNames
  classVariableNames: stringOfCiassVarNames
  poolDictionaries: stringOfPoolNames
  category: categoryNameString

*END!*
